# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'c9de34cf-a7d1-4c8c-be64-58e33153bce8'
  imageRepository: 'vincentchwongpipelinesjavascriptdocker'
  containerRegistry: 'icodevcr.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'icodevcr16429d93-auth'
  gitPubKey: $(argocd_key_pub)

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Name of the new namespace being created to deploy the PR changes.
  k8sNamespaceForPR: 'review-app-$(System.PullRequest.PullRequestId)'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'vincentchwongpipelinesjavascriptdocker-1747.azuredevops'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: InstallSSHKey@0
            inputs:
              knownHostsEntry: 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=='
              sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQD13njcTt/xKccubahpMa4iblkSjEAvQCjrocy6Lei/S9Y2xuxZldPcRVIe0rbq0DEFXqYejqTMw9zzC7xIRjTIyRwiJhjRwWWeaLCek8dlByEvx9b8ZLFAhCNGwHlMJ623CizziAZHWRufaQblcwEiOMqKV1zfxiKpZ7oHexXtd2mcVZe9kiYOfr5uijIRLqfU1HJ8XfhqCOqfpxOaqCdJFs5cMepKPpIQG+ZipBUal80gliae69d30O5eyf7GlSAPPAzCfmUK4qV7aqmgTjC66cOWm/CjLzzPVEdt5xiuJn9p3LbSgkSAk0rK0ARtXm4XLaJ9vtrmqz00p2RWopZrYzTTlAsKMy38r5hJ7rBmmwazfvLTSGQfWe5rNi79rlIdxxX0dt78BP8DeM4AVjEpMaUrIoeA6IZPlF3AUTmMD8M9TuRrmi9e4ui/09bwgoDrHuFL15dbtolZwkGFKzEEi0cw8ZE3owsXbCvDmwriOyX9S8wM+cJq3xTRrnufTcYDRL/ozq1QwcDWAYJ3IhMBjz+xSgq7we6dISE8jr+YyuUTxSHj136ipHs0LJ88Hjz5gERPV4Q8DiDdlbkMz6YspMFLll/qN1oPcwuze1sLSWtml0vCYaGN4Q5h/qKyL5TclwCgk7CoJD+6O35e4W/9lo9IZj3YTJNywnqP0wRCwQ== ansadmin@icodev-vw'
              sshKeySecureFile: 'argocd_key.pem'

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                git config --global user.email "vincentchwong@gmail.com"
                git config --global user.name "Vincent Wong"
                git clone git@github.com:vincentchwong/k8s-deploy-app.git
                cd k8s-deploy-app/pipelines-javascript-docker/manifests/overlays/dev
                cat << EOF | tee kustomization.yaml
                bases:
                - ../../base
                images:
                - name: icodevcr.azurecr.io/vincentchwongpipelinesjavascriptdocker
                  newTag: "$(tag)"
                EOF
                git commit -am "Image Tag Update"
                git push origin master
